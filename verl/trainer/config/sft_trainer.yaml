data:
  train_batch_size: 256
  micro_batch_size: null # 廃止予定、micro_batch_size_per_gpu を使用してください
  micro_batch_size_per_gpu: 4  # これは検証バッチサイズでもあります
  train_files: ~/data/gsm8k/train.parquet
  val_files: ~/data/gsm8k/test.parquet
  prompt_key: question
  response_key: answer
  prompt_dict_keys: null
  response_dict_keys: null
  multiturn:
    enable: false  # マルチターンデータセットを使用する場合は true に設定
    messages_key: messages  # マルチターンモードでのメッセージリストのキー
    tools_key: tools  # マルチターンモードでのツールリストのキー
    enable_thinking_key: enable_thinking  # マルチターンモードで思考を有効にするかどうか
  max_length: 1024
  truncation: error
  balance_dp_token: False
  chat_template: null
  custom_cls:
    path: null
    name: null
  use_shm: False
model:
  partial_pretrain: ~/models/gemma-1.1-7b-it
  use_shm: False
  fsdp_config:
    model_dtype: fp32
    wrap_policy:
      min_num_params: 0
    cpu_offload: False
    offload_params: False
  external_lib: null
  enable_gradient_checkpointing: True
  trust_remote_code: False
  lora_rank: 0  # LoRA を有効にするには正の値を設定（例：32）
  lora_alpha: 16  # LoRA スケーリング係数
  target_modules: all-linear  # LoRA 適応のターゲットモジュール
  use_liger: False
  strategy: fsdp2
optim:
  lr: 1e-5
  betas: [0.9, 0.95]
  weight_decay: 0.01
  warmup_steps_ratio: 0.1
  clip_grad: 1.0
  lr_scheduler: cosine
ulysses_sequence_parallel_size: 1
use_remove_padding: False
trainer:
  default_local_dir: checkpoints/${trainer.project_name}/${trainer.experiment_name}
  default_hdfs_dir: null
  project_name: gsm8k-sft
  experiment_name: test
  total_epochs: 4
  total_training_steps: null
  logger: [ 'console', 'wandb' ]
  seed: 1
  save_freq: -1
  test_freq: -1
  nnodes: 1
  n_gpus_per_node: 8
  max_ckpt_to_keep: null  # 保持するチェックポイントの最大数、すべて保持する場合は null に設定

  # 再開モード: "auto"、"disable"、または "resume_path"
  # "auto": 利用可能な場合は最後のチェックポイントから再開
  # "disable": 最初から開始
  # "resume_path": ユーザー定義のパスから再開
  resume_mode: auto

  resume_from_path: null

  checkpoint:
    save_contents: ["model", "optimizer", "extra"]

    # For more flexibility, you can specify the contents to load from the checkpoint.
    load_contents: ${trainer.checkpoint.save_contents}
  device: cuda
